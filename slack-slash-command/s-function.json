{
  "name": "slack-slash-command",
  "runtime": "nodejs4.3",
  "description": "Serverless Lambda function for project: roskilde-slack-slash-command",
  "customName": false,
  "customRole": false,
  "handler": "slack-slash-command/handler.handler",
  "timeout": 6,
  "memorySize": 1024,
  "authorizer": {},
  "custom": {
    "excludePatterns": []
  },
  "endpoints": [
    {
      "path": "slack-slash-command",
      "method": "GET",
      "type": "AWS",
      "authorizationType": "none",
      "authorizerFunction": false,
      "apiKeyRequired": false,
      "requestParameters": {},
      "requestTemplates": {
        "application/json": ""
      },
      "responses": {
        "400": {
          "statusCode": "400"
        },
        "default": {
          "statusCode": "200",
          "responseParameters": {},
          "responseModels": {
            "application/json;charset=UTF-8": "Empty"
          },
          "responseTemplates": {
            "application/json;charset=UTF-8": ""
          }
        }
      }
    },
    {
      "path": "slack-slash-command",
      "method": "POST",
      "type": "AWS",
      "authorizationType": "none",
      "authorizerFunction": false,
      "apiKeyRequired": false,
      "requestParameters": {},
      "requestModels": {
        "application/x-www-form-urlencoded": "SlackSlashCommand",
        "application/json": "SlackSlashCommand"
      },
      "requestTemplates": {
        "application/x-www-form-urlencoded": "#set($httpPost = $input.path('$').split(\"&\"))\n{\n#foreach( $kvPair in $httpPost )\n #set($kvTokenised = $kvPair.split(\"=\"))\n \"$kvTokenised[0]\" : \"$kvTokenised[1]\"#if( $foreach.hasNext ),#end\n#end\n}"
      },
      "responses": {
        "400": {
          "statusCode": "400"
        },
        "default": {
          "statusCode": "200",
          "responseParameters": {},
          "responseModels": {
            "application/json;charset=UTF-8": "Empty"
          },
          "responseTemplates": {
            "application/json;charset=UTF-8": ""
          }
        }
      }
    }
  ],
  "events": [],
  "environment": {
    "SERVERLESS_PROJECT": "${project}",
    "SERVERLESS_STAGE": "${stage}",
    "SERVERLESS_REGION": "${region}"
  },
  "vpc": {
    "securityGroupIds": [],
    "subnetIds": []
  }
}